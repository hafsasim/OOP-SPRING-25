#include <iostream>
using namespace std;

class Person {
protected:
    int age;
    string name;
    string contactNumber;
    string address;

public:
    Person(string n, int a, string c, string ad = "") 
        : name(n), age(a), contactNumber(c), address(ad) {}

    virtual void displayInfo() {
        cout << "Name: " << name << " | Age: " << age 
             << " | Contact: " << contactNumber << endl;
    }

    virtual void updateInfo(string newContact) {
        contactNumber = newContact;
    }
};

class Patient : public Person {
    int patientID;
    string medicalHistory;
    string doctorAssigned;

public:
    Patient(string n, int a, string c, int id, string mh, string doc) 
        : Person(n, a, c), patientID(id), medicalHistory(mh), doctorAssigned(doc) {}

    void displayInfo() override {
        Person::displayInfo();
        cout << "Patient ID: " << patientID 
             << " | Medical History: " << medicalHistory 
             << " | Doctor Assigned: " << doctorAssigned << endl;
    }
};

class Doctor : public Person {
    double consultationFee;
    string specialization;
    string patientsList;

public:
    Doctor(string n, int a, string c, string spec, double fee, string plist) 
        : Person(n, a, c), specialization(spec), consultationFee(fee), patientsList(plist) {}

    void displayInfo() override {
        Person::displayInfo();
        cout << "Specialization: " << specialization 
             << " | Consultation Fee: $" << consultationFee 
             << " | Patients List: " << patientsList << endl;
    }
};

class Nurse : public Person {
    string assignedWard;
    string shiftTimings;

public:
    Nurse(string n, int a, string c, string ward, string shift) 
        : Person(n, a, c), assignedWard(ward), shiftTimings(shift) {}

    void displayInfo() override {
        Person::displayInfo();
        cout << "Ward: " << assignedWard 
             << " | Shift: " << shiftTimings << "\n";
    }
};

class Administrator : public Person {
    double salary;
    string department;

public:
    Administrator(string n, int a, string c, string dept, double sal) 
        : Person(n, a, c), department(dept), salary(sal) {}

    void updateInfo(string newContact) override {
        contactNumber = newContact;
        cout << "Contact has been updated.\n";
    }
};

int main() {
    cout << "\n";

    Patient p1("Bilal Asim", 22, "0300-1234567", 101, "High BP", "Dr. Asim Enam");
    Doctor d1("Dr. Asim Enam", 45, "0333-9876543", "Cardiology", 5000, "Bilal Asim, Yusra Asim");
    Nurse n1("Hafsa Asim", 30, "0345-4567890", "ICU", "Day");
    Administrator a1("Talha Shahid", 40, "0300-1112222", "Management", 85000);

    cout << "Patient Info:" << endl;
    p1.displayInfo();

    cout << "\nDoctor Info:" << endl;
    d1.displayInfo();

    cout << "\nNurse Info:" << endl;
    n1.displayInfo();

    cout << "\nAdministrator Info:" << endl;
    a1.updateInfo("0300-1112233");

    return 0;
}
