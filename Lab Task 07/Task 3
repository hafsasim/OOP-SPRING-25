#include <iostream>
using namespace std;

class Ticket {
protected:
    int ticketID;
    double price;
    string passengerName;
    string date;
    string destination;

public:
    Ticket(int id, string name, double cost, string tripDate, string place)
        : ticketID(id), passengerName(name), price(cost), date(tripDate), destination(place) {}

    virtual void reserve() {
        cout << "Ticket reserved for " << passengerName << " to " << destination << " on " << date << "." << endl;
    }

    virtual void cancel() {
        cout << "Ticket with ID " << ticketID << " has been canceled." << endl;
    }

    virtual void displayTicketInfo() {
        cout << "Ticket ID: " << ticketID << endl;
        cout << "Passenger: " << passengerName << endl;
        cout << "Price: $" << price << endl;
        cout << "Date: " << date << endl;
        cout << "Destination: " << destination << endl;
    }
};

class FlightTicket : public Ticket {
    string airlineName;
    string flightNumber;
    string seatClass;

public:
    FlightTicket(int id, string name, double cost, string tripDate, string place, string airline, string flightNum, string seat)
        : Ticket(id, name, cost, tripDate, place), airlineName(airline), flightNumber(flightNum), seatClass(seat) {}

    void displayTicketInfo() override {
        Ticket::displayTicketInfo();
        cout << "Airline: " << airlineName << endl;
        cout << "Flight Number: " << flightNumber << endl;
        cout << "Class: " << seatClass << endl;
    }
};

class TrainTicket : public Ticket {
    string trainNumber;
    string coachType;
    string departureTime;

public:
    TrainTicket(int id, string name, double cost, string tripDate, string place, string trainNum, string coach, string time)
        : Ticket(id, name, cost, tripDate, place), trainNumber(trainNum), coachType(coach), departureTime(time) {}

    void reserve() override {
        cout << "Train seat assigned for " << passengerName << " on train " << trainNumber << " at " << departureTime << "." << endl;
    }
};

class BusTicket : public Ticket {
    int seatNumber;
    string busCompany;

public:
    BusTicket(int id, string name, double cost, string tripDate, string place, string company, int seat)
        : Ticket(id, name, cost, tripDate, place), busCompany(company), seatNumber(seat) {}

    void cancel() override {
        cout << "Last-minute refund processed for bus ticket with ID " << ticketID << "." << endl;
    }
};

class ConcertTicket : public Ticket {
    string artistName;
    string venue;
    string seatType;

public:
    ConcertTicket(int id, string name, double cost, string tripDate, string place, string artist, string location, string seat)
        : Ticket(id, name, cost, tripDate, place), artistName(artist), venue(location), seatType(seat) {}

    void displayTicketInfo() override {
        Ticket::displayTicketInfo();
        cout << "Artist: " << artistName << endl;
        cout << "Venue: " << venue << endl;
        cout << "Seat Type: " << seatType << endl;
    }
};

int main() {
    cout << "\n";

    FlightTicket f1(1, "Asim Enam", 3500, "2025-04-15", "Dubai", "Emirates", "EK202", "Business");
    f1.displayTicketInfo();

    TrainTicket t1(2, "Bilal Asim", 1800, "2025-04-18", "Lahore", "Pak Express", "Economy", "10:30 AM");
    t1.reserve();

    BusTicket b1(3, "Yusra Asim", 2500, "2025-04-20", "Hyderabad", "Skyways", 7);
    b1.cancel();

    ConcertTicket c1(4, "Hafsa Asim", 6000, "2025-04-22", "Karachi", "Ali Zafar", "Expo Center", "VIP");
    c1.displayTicketInfo();

    return 0;
}

