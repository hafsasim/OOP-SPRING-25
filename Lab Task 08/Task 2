#include <iostream>
using namespace std;

class Account
{
    string accNO;
    double accBalance;

public:
    Account(string accNO, double accBalance) : accNO(accNO), accBalance(accBalance) {}

    friend void transferFunds(Account &aa, Account &bb, double money);
    friend class Manager;
};

void transferFunds(Account &aa, Account &bb, double money)
{
    if (money > 0 && money <= aa.accBalance)
    {
        aa.accBalance -= money;
        bb.accBalance += money;
        cout << "Transfered money (" << money << ") from account: " << aa.accNO << " to: " << bb.accNO << endl;
    }
    else
    {
        cout << "Invalid data,Please enter correct data" << endl;
    }
}

class Manager
{
public:
    void display(Account &A)
    {
        cout << "Account number: " << A.accNO << endl;
        cout << "Account Balance: " << A.accBalance << endl;
    }
    void withdraw(Account &A, double amount)
    {
        if (amount < 0 && amount >= A.accBalance)
        {
            cout << "Invalid Amount,Try again" << endl;
        }
        else
        {
            A.accBalance -= amount;
            cout << "After withdrawl the balance is: " << A.accBalance << endl;
        }
    }
    void deposit(Account &A, double amount)
    {
        if (amount < 0 && amount > A.accBalance)
        {
            cout << "Invalid Amount,Try again" << endl;
        }
        else
        {
            A.accBalance += amount;
            cout << "After withdrawl the balance is: " << A.accBalance << endl;
        }
    }
};

int main()
{
    Account Acc1("0577", 10000);
    Account Acc2("0700", 20000);
    Manager M1;
    M1.display(Acc1);
    M1.display(Acc2);
    M1.withdraw(Acc1, 3400.7);
    M1.deposit(Acc1, 2000.8);
    M1.withdraw(Acc2, 2670.9);
    transferFunds(Acc1, Acc2, 504.8);
    cout << "Details After Withdraw deposit and transfer:-" << endl;
    M1.display(Acc1);
    M1.display(Acc1);
    M1.display(Acc2);
}
